[TriggersWindow]
$CC00=lblTriggers:XNALabel
$CC01=btnNewTrigger:EditorButton
$CC02=btnDeleteTrigger:EditorButton
$CC03=btnCloneTrigger:EditorButton
$CC04=ddActions:XNADropDown
$CC05=tbFilter:EditorSuggestionTextBox
$CC06=btnSortOptions:SortButton

; General trigger options
$CC07=lblSelectedTrigger:XNALabel
$CC08=tbName:EditorTextBox
$CC09=lblName:XNALabel
$CC10=ddHouseType:XNADropDown
$CC11=lblHouse:XNALabel
$CC12=ddType:XNADropDown
$CC13=lblType:XNALabel
$CC14=selAttachedTrigger:EditorPopUpSelector
$CC15=lblAttachedTrigger:XNALabel
$CC16=lblTriggerColor:XNALabel
$CC17=ddTriggerColor:XNADropDown
$CC18=chkDisabled:XNACheckBox
$CC19=lblDifficulties:XNALabel
$CC20=chkEasy:XNACheckBox
$CC21=chkMedium:XNACheckBox
$CC22=chkHard:XNACheckBox

$CCline1=panelLine1:XNAPanel

; Events
$CCe00=lblEvents:XNALabel
$CCe01=btnAddEvent:EditorButton
$CCe02=btnDeleteEvent:EditorButton
$CCe03=lbEvents:EditorListBox
$CCe04=selEventType:EditorPopUpSelector
$CCe05=lblEventType:XNALabel
$CCe06=panelEventDescription:EditorDescriptionPanel
$CCe07=lblEventParameters:XNALabel
$CCe08=lbEventParameters:EditorListBox
$CCe09=lblEventParameterValue:XNALabel
$CCe10=tbEventParameterValue:EditorTextBox
$CCe11=btnEventParameterValuePreset:EditorButton
$CCe12=btnCloneEvent:EditorButton

$CCline2=panelLine2:XNAPanel

; Actions
$CCa00=lblActions:XNALabel
$CCa01=btnAddAction:EditorButton
$CCa02=btnDeleteAction:EditorButton
$CCa03=lbActions:EditorListBox
$CCa04=selActionType:EditorPopUpSelector
$CCa05=lblActionType:XNALabel
$CCa06=panelActionDescription:EditorDescriptionPanel
$CCa07=lblActionParameters:XNALabel
$CCa08=lbActionParameters:EditorListBox
$CCa09=lblActionParameterValue:XNALabel
$CCa10=tbActionParameterValue:EditorTextBox
$CCa11=btnActionParameterValuePreset:EditorButton
$CCa12=btnCloneAction:EditorButton
$CCa13=btnActionGoToTarget:EditorButton

$Height=getBottom(lbActionParameters) + EMPTY_SPACE_BOTTOM
$Width=getRight(tbName) + EMPTY_SPACE_SIDES
$CCTriggerList=lbTriggers:EditorListBox
HasCloseButton=true

[lblTriggers]
$X=EMPTY_SPACE_SIDES
$Y=EMPTY_SPACE_TOP
FontIndex=1
$Text=translate(Triggers:)

[btnNewTrigger]
$X=getX(lblTriggers)
$Y=getBottom(lblTriggers) + EMPTY_SPACE_TOP
$Width=200 + (isGreater(RESOLUTION_WIDTH, 1919) * 60)
$Text=translate(New)

[btnDeleteTrigger]
$X=getX(lblTriggers)
$Y=getBottom(btnNewTrigger) + VERTICAL_SPACING
$Width=getWidth(btnNewTrigger)
$Text=translate(Delete)

[btnCloneTrigger]
$X=getX(lblTriggers)
$Y=getBottom(btnDeleteTrigger) + VERTICAL_SPACING
$Width=getWidth(btnNewTrigger)
$Text=translate(Clone)

[ddActions]
$X=getX(lblTriggers)
$Y=getBottom(btnCloneTrigger) + VERTICAL_SPACING
$Width=getWidth(btnNewTrigger)

[tbFilter]
$X=getX(lblTriggers)
$Y=getBottom(ddActions) + VERTICAL_SPACING
$Width=getWidth(btnNewTrigger) - BUTTON_HEIGHT
$Height=BUTTON_HEIGHT
$Suggestion=translate(Search trigger...)

[btnSortOptions]
$X=getRight(tbFilter)
$Y=getY(tbFilter)

[lbTriggers]
$X=getX(lblTriggers)
$Y=getBottom(tbFilter)
$Width=getWidth(btnNewTrigger)
$Height=getHeight(TriggersWindow) - getY(lbTriggers) - EMPTY_SPACE_BOTTOM


; ***************************
; Selected trigger properties
; ***************************

[lblSelectedTrigger]
$X=getRight(btnNewTrigger) + (HORIZONTAL_SPACING * 2)
$Y=getY(lblTriggers)
FontIndex=1
$Text=translate(Selected Trigger:)

[tbName]
$X=getX(lblSelectedTrigger) + 106
$Y=getBottom(lblSelectedTrigger) + EMPTY_SPACE_TOP
$Width=444 + (isGreater(RESOLUTION_WIDTH, 1920) * 60)

[lblName]
$X=getX(lblSelectedTrigger)
$Y=getY(tbName) + 1
$Text=translate(Name:)

[ddHouseType]
$X=getX(tbName)
$Y=getBottom(tbName) + VERTICAL_SPACING
$Width=144

[lblHouse]
$X=getX(lblSelectedTrigger)
$Y=getY(ddHouseType) + 1
$Text=translate(House:)

[ddType]
$X=getRight(ddHouseType) + (HORIZONTAL_SPACING * 2) + 60
$Y=getY(ddHouseType)
$Width=getRight(tbName) - getX(ddType)

[lblType]
$X=getRight(ddHouseType) + (HORIZONTAL_SPACING * 2)
$Y=getY(lblHouse)
$Text=translate(Type:)

[selAttachedTrigger]
$X=getX(tbName)
$Y=getBottom(ddType) + VERTICAL_SPACING
$Width=getWidth(tbName)

[lblAttachedTrigger]
$X=getX(lblName)
$Y=getY(selAttachedTrigger) + 1
$Text=translate(Attached trigger:)

[lblTriggerColor]
$X=getX(lblName)
$Y=getBottom(selAttachedTrigger) + VERTICAL_SPACING + 1
$Text=translate(Color:)

[ddTriggerColor]
$X=getX(tbName)
$Y=getBottom(selAttachedTrigger) + VERTICAL_SPACING
$Width=getWidth(tbName)

[chkDisabled]
$X=getX(lblName)
$Y=getBottom(ddTriggerColor) + VERTICAL_SPACING
$Text=translate(Disabled (must be enabled by another trigger for this trigger to fire))

[lblDifficulties]
$X=getX(lblName)
$Y=getBottom(chkDisabled) + VERTICAL_SPACING
$Text=translate(Enabled on difficulty levels:)

[chkEasy]
$X=getRight(lblDifficulties) + 50
$Y=getY(lblDifficulties)
$Text=translate(Easy)

[chkMedium]
$X=getRight(chkEasy) + 80
$Y=getY(chkEasy)
$Text=translate(Medium)

[chkHard]
$X=getRight(chkMedium) + 80
$Y=getY(chkEasy)
$Text=translate(Hard)

[panelLine1]
$X=getX(lblName)
$Y=getBottom(chkEasy) + (VERTICAL_SPACING * 3)
$Width=getRight(tbName) - getX(panelLine1)
$Height=0

; ***********************
; Selected trigger events
; ***********************

[lblEvents]
$X=getX(lblName)
$Y=getBottom(panelLine1) + (VERTICAL_SPACING * 3)
FontIndex=1
$Text=translate(Events of selected trigger:)

[btnAddEvent]
$X=getRight(lblEvents) + (HORIZONTAL_SPACING * 2)
$Y=getY(lblEvents) - 1
$Width=100
$Text=translate(Add Event)

[btnDeleteEvent]
$Width=getWidth(btnAddEvent)
$X=getRight(btnAddEvent) + (HORIZONTAL_SPACING * 2)
$Y=getY(btnAddEvent)
$Text=translate(Delete Event)

[btnCloneEvent]
$Width=getWidth(btnAddEvent)
$X=getRight(btnDeleteEvent) + (HORIZONTAL_SPACING * 2)
$Y=getY(btnAddEvent)
$Text=translate(Clone Event)

[lbEvents]
$X=getX(lblName)
$Y=getBottom(lblEvents) + (VERTICAL_SPACING * 3)
$Height=200
$Width=150 + (isGreater(RESOLUTION_WIDTH, 1920) * 30)

[selEventType]
$X=getRight(lbEvents) + 100
$Y=getY(lbEvents)
$Width=getRight(tbName) - getX(selEventType)

[lblEventType]
$X=getRight(lbEvents) + (HORIZONTAL_SPACING * 2)
$Y=getY(selEventType) + 1
$Text=translate(Event type:)

[panelEventDescription]
$X=getX(lblEventType)
$Y=getBottom(selEventType) + VERTICAL_SPACING
$Width=getRight(selEventType) - getX(panelEventDescription)
$Height=80

[lblEventParameters]
$X=getX(lblEventType)
$Y=getBottom(panelEventDescription) + VERTICAL_SPACING
$Text=translate(Event parameters:)

[lbEventParameters]
$X=getX(lblEventType)
$Y=getBottom(lblEventParameters) + VERTICAL_SPACING
$Width=(getWidth(panelEventDescription) - EMPTY_SPACE_SIDES) / 2
$Height=getBottom(lbEvents) - getY(lbEventParameters)

[lblEventParameterValue]
$X=getRight(lbEventParameters) + EMPTY_SPACE_SIDES
$Y=getY(lblEventParameters)
$Text=translate(Parameter value:)

[tbEventParameterValue]
$X=getX(lblEventParameterValue)
$Y=getY(lbEventParameters)
$Width=getRight(panelEventDescription) - getX(tbEventParameterValue) - 30

[btnEventParameterValuePreset]
$X=getRight(tbEventParameterValue)
$Y=getY(tbEventParameterValue)
$Width=30
Text=...

[panelLine2]
$X=getX(lblName)
$Y=getBottom(lbEventParameters) + (VERTICAL_SPACING * 3)
$Width=getWidth(panelLine1)
$Height=0

; ************************
; Selected trigger actions
; ************************

[lblActions]
$X=getX(lblName)
$Y=getBottom(panelLine2) + (VERTICAL_SPACING * 3)
FontIndex=1
$Text=translate(Actions of selected trigger:)

[btnAddAction]
$X=getX(btnAddEvent)
$Y=getY(lblActions) - 1
$Width=100
$Text=translate(Add Action)

[btnDeleteAction]
$Width=getWidth(btnAddAction)
$X=getX(btnDeleteEvent)
$Y=getY(btnAddAction)
$Text=translate(Delete Action)

[btnCloneAction]
$Width=getWidth(btnAddAction)
$X=getX(btnCloneEvent)
$Y=getY(btnAddAction)
$Text=translate(Clone Action)

[lbActions]
$X=getX(lblName)
$Y=getBottom(lblActions) + (VERTICAL_SPACING * 3)
$Height=200
$Width=150 + (isGreater(RESOLUTION_WIDTH, 1920) * 30)

[selActionType]
$X=getRight(lblActions) + 100
$Y=getY(lbActions)
$Width=getRight(tbName) - getX(selActionType)

[lblActionType]
$X=getRight(lbActions) + (HORIZONTAL_SPACING * 2)
$Y=getY(selActionType) + 1
$Text=translate(Action type:)

[panelActionDescription]
$X=getX(lblActionType)
$Y=getBottom(selActionType) + VERTICAL_SPACING
$Width=getRight(selActionType) - getX(panelActionDescription)
$Height=80

[lblActionParameters]
$X=getX(lblActionType)
$Y=getBottom(panelActionDescription) + VERTICAL_SPACING
$Text=translate(Action parameters:)

[lbActionParameters]
$X=getX(lblActionType)
$Y=getBottom(lblActionParameters) + VERTICAL_SPACING
$Width=(getWidth(panelActionDescription) - EMPTY_SPACE_SIDES) / 2
$Height=getBottom(lbActions) - getY(lbActionParameters)

[lblActionParameterValue]
$X=getRight(lbActionParameters) + EMPTY_SPACE_SIDES
$Y=getY(lblActionParameters)
$Text=translate(Parameter value:)

[tbActionParameterValue]
$X=getX(lblActionParameterValue)
$Y=getY(lbActionParameters)
$Width=getRight(panelActionDescription) - getX(tbActionParameterValue) - 30

[btnActionParameterValuePreset]
$X=getRight(tbActionParameterValue)
$Y=getY(tbActionParameterValue)
$Width=30
$Text=translate(...)

[btnActionGoToTarget]
$X=getX(tbActionParameterValue)
$Y=getBottom(tbActionParameterValue) + VERTICAL_SPACING
$Width=getWidth(tbActionParameterValue) - 10
$Text=translate(Go To Target ->)