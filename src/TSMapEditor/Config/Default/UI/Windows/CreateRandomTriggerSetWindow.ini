[CreateRandomTriggerSetWindow]
$Height=330
$Width=300

$CC00=lblHeader:XNALabel
$CC01=lblSubHeader:XNALabel
$CC02=lblName:XNALabel
$CC03=tbName:EditorTextBox
$CC04=lblColor:XNALabel
$CC05=ddColor:XNADropDown
$CC06=lblNumTriggers:XNALabel
$CC07=tbNumTriggers:EditorNumberTextBox
$CC08=lblElapsedTime:XNALabel
$CC09=tbElapsedTime:EditorNumberTextBox
$CC10=lblDelay:XNALabel
$CC11=tbDelay:EditorNumberTextBox
$CC12=lblTriggerType:XNALabel
$CC13=ddTriggerType:XNADropDown
$CC14=cbEveryDiff:XNACheckBox
$CC15=btnApply:EditorButton
HasCloseButton=true

[lblHeader]
$X=EMPTY_SPACE_SIDES
$Y=EMPTY_SPACE_TOP
FontIndex=1
Text=Create Random Trigger Set

[lblSubHeader]
$X=EMPTY_SPACE_SIDES
$Y=getBottom(lblHeader) + VERTICAL_SPACING
Text=Create a set of triggers of which only one is@randomly activated in-game. This allows you to @quickly add variance to in-game events.

[lblName]
$X=EMPTY_SPACE_SIDES
$Y=getBottom(lblSubHeader) + (VERTICAL_SPACING * 3)
Text=Trigger name:

[tbName]
$X=150
$Y=getY(lblName) + 1
$Width=getWidth(CreateRandomTriggerSetWindow) - getX(tbName) - EMPTY_SPACE_SIDES
AllowComma=no

[lblColor]
$X=getX(lblName)
$Y=getBottom(lblName) + (VERTICAL_SPACING * 2)
Text=Color:

[ddColor]
$X=getX(tbName)
$Y=getY(lblColor) + 1
$Width=getWidth(tbName)

[lblNumTriggers]
$X=getX(lblName)
$Y=getBottom(lblColor) + (VERTICAL_SPACING * 2)
Text=No. of triggers to create:

[tbNumTriggers]
$X=getX(tbName)
$Y=getY(lblNumTriggers) + 1
$Width=getWidth(tbName)
AllowComma=no
AllowDecimals=no

[lblElapsedTime]
$X=getX(lblNumTriggers)
$Y=getBottom(lblNumTriggers) + (VERTICAL_SPACING * 2)
Text=Elapsed Time:

[tbElapsedTime]
$X=getX(tbNumTriggers)
$Y=getY(lblElapsedTime) + 1
$Width=getWidth(tbNumTriggers)
AllowComma=no
AllowDecimals=no

[lblDelay]
$X=getX(lblNumTriggers)
$Y=getBottom(lblElapsedTime) + (VERTICAL_SPACING * 2)
Text=Random Delay (min. 10):

[tbDelay]
$X=getX(tbNumTriggers)
$Y=getY(lblDelay)
$Width=getWidth(tbNumTriggers)
AllowComma=no
AllowDecimals=no

[lblTriggerType]
$X=getX(lblNumTriggers)
$Y=getBottom(lblDelay) + (VERTICAL_SPACING * 2)
Text=Trigger Type:

[ddTriggerType]
$X=getX(tbNumTriggers)
$Y=getY(lblTriggerType)
$Width=getWidth(tbNumTriggers)
Option0=0 - one-time, single-obj c.
Option1=1 - one-time, multi-obj c.
Option2=2 - repeating, single-obj c.

[cbEveryDiff]
$X=getX(lblNumTriggers)
$Y=getBottom(lblTriggerType) + (VERTICAL_SPACING * 3)
Text=Create triggers for all difficulties

[btnApply]
$Width=80
$X=horizontalCenterOnParent()
$Y=getHeight(CreateRandomTriggerSetWindow) - getHeight(btnApply) - EMPTY_SPACE_BOTTOM
Text=Apply